return {
    "ibhagwan/fzf-lua", -- Plugin ch√≠nh: fzf-lua

    -- Ph·ª• thu·ªôc: ƒë·ªÉ hi·ªÉn th·ªã icon ƒë·∫πp (file, folder, v.v.)
    dependencies = { "nvim-tree/nvim-web-devicons" },

    -- N·∫øu b·∫°n d√πng mini.nvim th√¨ c√≥ th·ªÉ d√πng: echasnovski/mini.icons
    -- dependencies = { "echasnovski/mini.icons" },

    -- opts c√≥ th·ªÉ ƒë·ªÉ tr·ªëng n·∫øu b·∫°n config to√†n b·ªô b·∫±ng tay
    opts = {},

    config = function()
        local fzf = require("fzf-lua")

        -- C·∫•u h√¨nh ch√≠nh cho plugin
        fzf.setup({
            -- C·∫•u h√¨nh c·ª≠a s·ªï hi·ªán ra
            winopts = {
                height = 0.85,      -- chi·ªÅu cao: 85%
                width = 0.90,       -- chi·ªÅu r·ªông: 90%
                preview = {
                    layout = "horizontal", -- xem tr∆∞·ªõc theo chi·ªÅu ngang
                },
            },

            -- M√†u s·∫Øc t∆∞∆°ng th√≠ch terminal
            fzf_colors = {
                true,               -- d√πng m√†u m·∫∑c ƒë·ªãnh
                bg = "-1",          -- n·ªÅn trong su·ªët
                gutter = "-1",      -- kh√¥ng c√≥ vi·ªÅn b√™n tr√°i
            },

            -- G√°n ph√≠m t·∫Øt khi ƒëang trong giao di·ªán FZF
            keymap = {
                fzf = {
                    ["ctrl-q"] = "select-all+accept", -- ctrl-q: ch·ªçn t·∫•t c·∫£ + ch·∫•p nh·∫≠n
                },
            },
        })

        -- üéØ C√°c keymap ti·ªán l·ª£i ƒë·ªÉ t√¨m ki·∫øm:
        vim.keymap.set("n", "<leader>ff", fzf.files, { desc = "Find Files" })            -- T√¨m t·∫•t c·∫£ file
        vim.keymap.set("n", "<leader>pf", fzf.git_files, { desc = "Find Git Files" })    -- T√¨m file ƒë√£ commit (git)
        vim.keymap.set("n", "<leader>fg", fzf.live_grep, { desc = "Live Grep" })         -- T√¨m ki·∫øm theo n·ªôi dung file

        -- T√¨m ki·∫øm n·ªôi dung trong c·∫£ file ·∫©n (tr·ª´ `.git`)
        vim.keymap.set("n", "<leader>fG", function()
            require("fzf-lua").live_grep({
                rg_opts = "--hidden --glob '!.git/*' --column --line-number --no-heading --color=always -e",
            })
        end, { desc = "Live Grep includes hidden files" })

        vim.keymap.set("n", "<leader>fb", fzf.buffers, { desc = "Buffers" })             -- Chuy·ªÉn ƒë·ªïi gi·ªØa c√°c buffer
        vim.keymap.set("n", "<leader>fh", fzf.help_tags, { desc = "Help Tags" })         -- T√¨m ki·∫øm trong t√†i li·ªáu `:help`

        -- T√¨m chu·ªói nh·∫≠p t·ª´ ng∆∞·ªùi d√πng trong t·∫•t c·∫£ file
        vim.keymap.set("n", "<leader>fs", function()
            fzf.grep({ search = vim.fn.input("Grep For > ") })
        end, { desc = "FZF grep with input" })
    end,
}
